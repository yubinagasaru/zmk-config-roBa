#include <layout_shift.dtsi>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#include <layout_shift_kp_override.dtsi>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kpls TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kpls LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kpls DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kpls EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kpls MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kpls TAB           &kpls Q             &kpls W           &kpls E            &kpls R                        &kpls T                                                 &kpls Y        &kpls U  &kpls I      &kpls O    &kpls P          &kpls MINUS
&kpls LEFT_WIN      &kpls A             &kpls S           &kpls D            &kpls F                        &kpls G        &kpls BACKSPACE             &kpls F12        &kpls H        &kpls J  &kpls K      &kpls L    &kpls SEMICOLON  &kpls COLON
&kpls LEFT_SHIFT    &mt LEFT_SHIFT Z  &kpls X           &kpls C            &kpls V                        &kpls B        &kpls DEL                   &kpls BACKSPACE  &kpls N        &kpls M  &kpls COMMA  &kpls DOT  &kpls SLASH      &kpls NON_US_BACKSLASH
&kpls LEFT_CONTROL  &kpls LEFT_ALT      &kpls LEFT_ARROW  &kpls RIGHT_ARROW  &lt_to_layer_0 6 INT_HENKAN  &lt 3 SPACE  &lt_to_layer_0 2 DEL      &kpls BACKSPACE  &lt 1 ENTER                             &kpls UP_ARROW   &kpls DOWN_ARROW
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kpls P   &trans  &trans  &trans  &trans  &trans                       &kpls F1  &kpls F2  &kpls F3   &kpls F4   &kpls F5  &kpls P
&trans  &trans  &trans  &trans  &trans  &trans  &kpls F13      &kpls F6  &kpls F7  &kpls F8  &kpls F9   &kpls F10  &kpls P   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &kpls F11  &kpls P    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kpls F12
            >;
        };

        NUM {
            bindings = <
&kpls P  &kpls MINUS                   &kpls KP_NUMBER_7  &kpls KP_NUMBER_8  &kpls KP_NUMBER_9  &kpls PLUS                                                   &kpls CARET         &kpls AMPERSAND      &kpls TILDE       &kpls LEFT_PARENTHESIS  &kpls RIGHT_PARENTHESIS  &kpls P
&kpls P  &kpls SLASH                   &kpls KP_NUMBER_4  &kpls KP_NUMBER_5  &kpls KP_NUMBER_6  &kpls ASTERISK  &kpls LC(LA(KP_NUMBER_0))      &kpls UNDERSCORE  &kpls EXCLAMATION   &kpls AT_SIGN        &kpls HASH        &kpls DOLLAR            &kpls PERCENT            &kpls P
&kpls P  &mt LEFT_SHIFT KP_NUMBER_0  &kpls KP_NUMBER_1  &kpls KP_NUMBER_2  &kpls KP_NUMBER_3  &kpls PERIOD    &kpls EQUAL                    &trans          &kpls LEFT_BRACKET  &kpls RIGHT_BRACKET  &kpls LEFT_BRACE  &kpls RIGHT_BRACE       &kpls BACKSLASH          &kpls P
&kpls P  &trans                      &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                                     &kpls PIPE               &kpls P
            >;
        };

        ARROW {
            bindings = <
&kpls P                    &kpls ESCAPE      &kpls LC(LS(TAB))  &kpls UP_ARROW  &kpls LC(TAB)  &trans                      &trans  &trans  &trans  &trans          &kpls P                   &kpls HOME
&kpls LEFT_ARROW           &kpls DOWN_ARROW  &kpls RIGHT_ARROW  &kpls END       &trans       &trans  &trans      &trans  &trans  &trans  &kpls P   &kpls LEFT_SHIFT  &kpls LG(LS(LEFT_ARROW))  &trans
&kpls LG(LS(RIGHT_ARROW))  &trans          &trans           &trans        &trans       &trans  &trans      &trans  &kpls P   &trans  &trans  &trans          &trans                  &trans
&trans                   &trans          &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans    &trans  &trans  &kpls P
&trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans  &kpls P   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &trans    &trans    &kpls P   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        SCROLL {
            bindings = <
&kpls P   &trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans  &kpls P
&trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &kpls P   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kpls P   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&kpls P         &trans        &trans  &trans  &trans       &trans                              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kpls P
&trans        &trans        &trans  &trans  &trans       &trans          &trans      &trans  &trans        &trans        &trans        &kpls P         &trans        &kpls NUMBER_1
&kpls NUMBER_2  &kpls NUMBER_3  &trans  &trans  &bootloader  &trans          &trans      &trans  &trans        &bt BT_CLR    &kpls P         &trans        &trans        &trans
&trans        &trans        &trans  &trans  &trans       &bt BT_CLR_ALL
            >;
        };
    };
};
